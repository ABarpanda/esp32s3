[1/10] Performing build step for 'bootloader'
[1/1] C:\WINDOWS\system32\cmd.exe /C "cd /D C:\esp_projects\dht11\dht11\build\bootloader\esp-idf\esptool_py && C:\Espressif\python_env\idf5.4_py3.11_env\Scripts\python.exe C:/Espressif/frameworks/esp-idf-v5.4.1/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x0 C:/esp_projects/dht11/dht11/build/bootloader/bootloader.bin"
Bootloader binary size 0x5220 bytes. 0x2de0 bytes (36%) free.
[2/10] No install step for 'bootloader'
[3/10] Completed 'bootloader'
[4/10] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/main.c.obj
[5/10] Linking C static library esp-idf\main\libmain.a
[6/10] Generating ld/sections.ld
[7/10] Linking CXX executable dht11.elf
[8/10] Generating binary image from built executable
esptool.py v4.8.1
Creating esp32s3 image...
Merged 2 ELF sections
Successfully created esp32s3 image.
Generated C:/esp_projects/dht11/dht11/build/dht11.bin
[9/10] C:\WINDOWS\system32\cmd.exe /C "cd /D C:\esp_projects\dht11\dht11\build\esp-idf\esptool_py && C:\Espressif\python_env\idf5.4_py3.11_env\Scripts\python.exe C:/Espressif/frameworks/esp-idf-v5.4.1/components/partition_table/check_sizes.py --offset 0x8000 partition --type app C:/esp_projects/dht11/dht11/build/partition_table/partition-table.bin C:/esp_projects/dht11/dht11/build/dht11.bin"
dht11.bin binary size 0x332a0 bytes. Smallest app partition is 0x100000 bytes. 0xccd60 bytes (80%) free.
[9/10] C:\WINDOWS\system32\cmd.exe /C "cd /D C:\Espressif\frameworks\esp-idf-v5.4.1\components\esptool_py && C:\Espressif\tools\cmake\3.30.2\bin\cmake.exe -D IDF_PATH=C:/Espressif/frameworks/esp-idf-v5.4.1 -D SERIAL_TOOL=C:/Espressif/python_env/idf5.4_py3.11_env/Scripts/python.exe;;C:/Espressif/frameworks/esp-idf-v5.4.1/components/esptool_py/esptool/esptool.py;--chip;esp32s3 -D SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args -D WORKING_DIRECTORY=C:/esp_projects/dht11/dht11/build -P C:/Espressif/frameworks/esp-idf-v5.4.1/components/esptool_py/run_serial_tool.cmake"
esptool.py --chip esp32s3 -p COM4 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 80m --flash_size 2MB 0x0 bootloader/bootloader.bin 0x10000 dht11.bin 0x8000 partition_table/partition-table.bin
esptool.py v4.8.1
Serial port COM4
Connecting...
Chip is ESP32-S3 (QFN56) (revision v0.2)
Features: WiFi, BLE, Embedded Flash 8MB (GD)
Crystal is 40MHz
MAC: 34:b7:da:64:0c:34
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 460800
Changed.
Configuring flash size...
Flash will be erased from 0x00000000 to 0x00005fff...
Flash will be erased from 0x00010000 to 0x00043fff...
Flash will be erased from 0x00008000 to 0x00008fff...
SHA digest in image updated
Compressed 21024 bytes to 13382...
Writing at 0x00000000... (100 %)
Wrote 21024 bytes (13382 compressed) at 0x00000000 in 0.4 seconds (effective 459.6 kbit/s)...
Hash of data verified.
Compressed 209568 bytes to 111579...
Writing at 0x00010000... (14 %)
Writing at 0x0001ca70... (28 %)
Writing at 0x00022c3a... (42 %)
Writing at 0x000292d3... (57 %)
Writing at 0x0002fe24... (71 %)
Writing at 0x00037c63... (85 %)
Writing at 0x0003ddd4... (100 %)
Wrote 209568 bytes (111579 compressed) at 0x00010000 in 1.5 seconds (effective 1123.7 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 103...
Writing at 0x00008000... (100 %)
Wrote 3072 bytes (103 compressed) at 0x00008000 in 0.1 seconds (effective 234.7 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
